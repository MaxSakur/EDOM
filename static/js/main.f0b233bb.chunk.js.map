{"version":3,"sources":["components/CustomNavLink/CustomNavLink.module.css","components/Loader/Loader.module.css","components/LogoWithHeader/LogoWithHeader.module.css","components/DraggableNavigation/index.ts","components/DraggableNavigation/DraggableNavigation.tsx","components/Loader/index.ts","components/Loader/Loader.tsx","components/ScreenPreLoader/index.ts","components/ScreenPreLoader/ScreenPreLoader.tsx","screens/HomeScreen/index.ts","screens/HomeScreen/HomeScreen.tsx","screens/SplitHouseScreen/index.ts","screens/SplitHouseScreen/SplitHouseScreen.tsx","components/CustomNavLink/index.ts","components/CustomNavLink/CustomNavLink.tsx","images/logo-new.png","components/LogoWithHeader/index.ts","components/LogoWithHeader/LogoWithHeader.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","DraggableNavigation","props","React","useState","activeDrags","setActiveDrags","horizonalMaxPoint","setHorizonalMaxPoint","nodeRef","useRef","dragHandlers","onStart","onStop","onDragChange","defaultPosition","x","y","axis","position","_","data","className","ref","children","Loader","s","loaderContainer","lds_default","ScreenPreLoader","currentCount","setCount","timer","useEffect","id","setInterval","clearInterval","HomeScreen","SplitHouseScreen","CustomNavLink","link","text","icon","activeClassName","is_active","nav_link","to","nav_link_text","LogoWithHeader","img","logo_container","src","imgPath","logo","alt","DONE_PROJECTS","exact","path","screen","CURRENT_PROJECTS","COMPANY","App","menuIsOpen","setMenuIsOpen","concatData","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0b233bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link\":\"CustomNavLink_nav_link__-zIij\",\"nav_link_text\":\"CustomNavLink_nav_link_text__1P-0q\",\"icon\":\"CustomNavLink_icon__-rYYv\",\"is_active\":\"CustomNavLink_is_active__xmoiQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__19ipN\",\"lds_default\":\"Loader_lds_default__2mQvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"LogoWithHeader_logo__1Xkal\",\"logo_container\":\"LogoWithHeader_logo_container__TuRjb\"};","import { DraggableNavigation } from \"./DraggableNavigation\";\n\nexport default DraggableNavigation;\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\ninterface DraggableNavigationProps {\n  children: React.ReactNode;\n  onDragChange: (value: boolean) => any;\n}\n\nexport const DraggableNavigation = (props: DraggableNavigationProps) => {\n  let [activeDrags, setActiveDrags] = React.useState(0);\n  const [horizonalMaxPoint, setHorizonalMaxPoint] = React.useState(0);\n  const OPEN_MENU_WIDTH = -240;\n  const nodeRef = React.useRef(null);\n  const onStart = () => setActiveDrags(++activeDrags);\n  const onStop = () => setActiveDrags(--activeDrags);\n  const dragHandlers = { onStart, onStop };\n  const { onDragChange } = props;\n\n  const handleCloseDraggable = () => {\n    onDragChange(true);\n    return setHorizonalMaxPoint(OPEN_MENU_WIDTH);\n  };\n  const handleOpenDraggable = () => {\n    onDragChange(false);\n    return setHorizonalMaxPoint(0);\n  };\n\n  return (\n    <Draggable\n      nodeRef={nodeRef}\n      defaultPosition={{ x: 0, y: 0 }}\n      axis=\"x\"\n      position={{ x: horizonalMaxPoint, y: 0 }}\n      {...dragHandlers}\n      onStop={(_, data) => {\n        if (data.x < horizonalMaxPoint) {\n          handleCloseDraggable();\n        } else {\n          handleOpenDraggable();\n        }\n      }}\n    >\n      <div className=\"box cursor-x\" ref={nodeRef}>\n        <div\n          className={`box_nav_icon ${\n            horizonalMaxPoint === 0 ? \"\" : \"box_nav_icon_active\"\n          }`}\n        />\n        {props.children}\n      </div>\n    </Draggable>\n  );\n};\n","import { Loader } from \"./Loader\";\n\nexport default Loader;\n","import s from \"./Loader.module.css\";\n\nexport const Loader = () => {\n  return (\n    <div className={s.loaderContainer}>\n      <div className={s.lds_default}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n","import { ScreenPreLoader } from \"./ScreenPreLoader\";\n\nexport default ScreenPreLoader;\n","import React, { FC } from \"react\";\nimport Loader from \"../Loader\";\n\ninterface ScreenPreLoader {\n  children: React.ReactNode;\n}\n\n// eslint-disable-next-line\nexport const ScreenPreLoader: FC<ScreenPreLoader> = ({ children }) => {\n  const [currentCount, setCount] = React.useState(2);\n  const timer = () => setCount(currentCount - 1);\n\n  React.useEffect(() => {\n    if (currentCount <= 0) {\n      return;\n    }\n\n    const id = setInterval(timer, 1000);\n    return () => clearInterval(id);\n    // eslint-disable-next-line\n  }, [currentCount]);\n\n  return <>{currentCount !== 0 ? <Loader /> : children}</>;\n};\n","import { HomeScreen } from \"./HomeScreen\";\n\nexport default HomeScreen;\n","export const HomeScreen = () => {\n  return <p>123</p>;\n};\n","import { SplitHouseScreen } from \"./SplitHouseScreen\";\n\nexport default SplitHouseScreen;\n","export const SplitHouseScreen = () => {\n  return <p>SplitHouseScreen</p>;\n};\n","import { CustomNavLink } from \"./CustomNavLink\";\n\nexport default CustomNavLink;\n","import { FC } from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./CustomNavLink.module.css\";\n\ninterface NavLinkProps {\n  link: string;\n  icon?: React.ReactNode;\n  text: string;\n}\n\nexport const CustomNavLink: FC<NavLinkProps> = ({ link, icon, text }) => {\n  return (\n    <NavLink\n      activeClassName={s.is_active}\n      className={s.nav_link}\n      to={`/${link}`}\n    >\n      <>\n        {/* <span className={s.icon}>{icon}</span> */}\n        <p className={s.nav_link_text}>{text}</p>\n      </>\n    </NavLink>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/logo-new.00e5acdc.png\";","import { LogoWithHeader } from \"./LogoWithHeader\";\n\nexport default LogoWithHeader;\n","import React, { FC } from \"react\";\nimport imgPath from \"./../../images/logo-new.png\";\nimport s from \"./LogoWithHeader.module.css\";\n\ninterface LogoWithHeaderProps {\n  img?: string;\n}\n\nexport const LogoWithHeader: FC<LogoWithHeaderProps> = ({ img }) => {\n  return (\n    <div className={s.logo_container}>\n      <img src={img || imgPath} className={s.logo} alt=\"Edom logo\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport DraggableNavigation from \"./components/DraggableNavigation\";\nimport ScreenPreLoader from \"./components/ScreenPreLoader\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport SplitHouseScreen from \"./screens/SplitHouseScreen\";\nimport CustomNavLink from \"./components/CustomNavLink\";\nimport LogoWithHeader from \"./components/LogoWithHeader\";\n// import { FaBeer } from \"react-icons/fa\";\n\nconst DONE_PROJECTS = [\n  {\n    exact: true,\n    text: \"ТаунХаус\",\n    link: \"home\",\n    path: \"/home\",\n    screen: <HomeScreen />,\n  },\n  {\n    text: \"Бойница\",\n    link: \"home2\",\n    path: \"/home2\",\n    screen: <SplitHouseScreen />,\n  },\n  {\n    text: \"Усадьба\",\n    link: \"home3\",\n    path: \"/home3\",\n    screen: <HomeScreen />,\n  },\n];\nconst CURRENT_PROJECTS = [\n  {\n    exact: true,\n    text: \"ТаунХаус\",\n    link: \"home4\",\n    path: \"/home4\",\n    screen: <HomeScreen />,\n  },\n  {\n    text: \"Бойница\",\n    link: \"home5\",\n    path: \"/home5\",\n    screen: <SplitHouseScreen />,\n  },\n  {\n    text: \"Усадьба\",\n    link: \"home6\",\n    path: \"/home6\",\n    screen: <HomeScreen />,\n  },\n];\n\nconst COMPANY = [\n  {\n    text: \"О компании\",\n    link: \"home7\",\n    path: \"/home7\",\n    screen: <HomeScreen />,\n  },\n  {\n    text: \"Контакты\",\n    link: \"home8\",\n    path: \"/home8\",\n    screen: <SplitHouseScreen />,\n  },\n  {\n    text: \"Инвестиционные программы\",\n    link: \"home9\",\n    path: \"/home9\",\n    screen: <SplitHouseScreen />,\n  },\n];\n\nfunction App() {\n  const [menuIsOpen, setMenuIsOpen] = React.useState(false);\n  const concatData = [...COMPANY, ...DONE_PROJECTS];\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <div className=\"control\">\n          <DraggableNavigation onDragChange={setMenuIsOpen}>\n            <LogoWithHeader />\n\n            {/* TODO: Add function that get an Array and create separator with block name header */}\n            <div className=\"separator_line\" />\n            <p className=\"separator_header\">Завершенные проекты</p>\n            <div className=\"separator_line\" />\n            {DONE_PROJECTS.map((screen, index) => (\n              <CustomNavLink\n                key={index}\n                link={screen.link}\n                text={screen.text}\n              />\n            ))}\n\n            <div className=\"separator_line\" />\n            <p className=\"separator_header\">Настоящие проекты</p>\n            <div className=\"separator_line\" />\n            {CURRENT_PROJECTS.map((screen, index) => (\n              <CustomNavLink\n                key={index}\n                link={screen.link}\n                text={screen.text}\n              />\n            ))}\n\n            <div className=\"separator_line\" />\n            <p className=\"separator_header\">Другое</p>\n            <div className=\"separator_line\" />\n            {COMPANY.map((screen, index) => (\n              <CustomNavLink\n                key={index}\n                link={screen.link}\n                text={screen.text}\n              />\n            ))}\n          </DraggableNavigation>\n        </div>\n\n        <div className={`window ${menuIsOpen && \"window_fullWidth\"}`}>\n          <Switch>\n            {concatData.map((screen, index) => (\n              <Route key={index} path={screen.path}>\n                <ScreenPreLoader>{screen.screen}</ScreenPreLoader>\n              </Route>\n            ))}\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}