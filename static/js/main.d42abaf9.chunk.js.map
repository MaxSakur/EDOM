{"version":3,"sources":["components/CustomNavLink/CustomNavLink.module.css","components/Loader/Loader.module.css","components/Control/NavigationLinkList/NavigationLinkList.module.css","components/Control/ControlSection/ControlSection.module.css","components/CustomNavLink/index.ts","components/CustomNavLink/CustomNavLink.tsx","components/Control/NavigationLinkList/index.ts","components/Control/NavigationLinkList/NavigationLinkList.tsx","components/Control/ControlSection/index.ts","components/Control/ControlSection/ControlSection.tsx","components/Control/DraggableNavigation/index.ts","components/Control/DraggableNavigation/DraggableNavigation.tsx","components/Loader/index.ts","components/Loader/Loader.tsx","components/ScreenPreLoader/index.ts","components/ScreenPreLoader/ScreenPreLoader.tsx","screens/HomeScreen/index.ts","screens/HomeScreen/HomeScreen.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","CustomNavLink","link","icon","text","className","s","nav_link","to","nav_link_text","NavigationLinkList","container","ControlSection","DraggableNavigation","props","React","useState","activeDrags","setActiveDrags","horizonalMaxPoint","setHorizonalMaxPoint","nodeRef","useRef","dragHandlers","onStart","onStop","onDragChange","defaultPosition","x","y","axis","position","_","data","ref","children","Loader","loaderContainer","lds_default","ScreenPreLoader","loading","setLoading","setInterval","HomeScreen","Test","App","menuIsOpen","setMenuIsOpen","console","log","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d42abaf9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav_link_text\":\"CustomNavLink_nav_link_text__1P-0q\",\"nav_link\":\"CustomNavLink_nav_link__-zIij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loaderContainer\":\"Loader_loaderContainer__19ipN\",\"lds_default\":\"Loader_lds_default__2mQvn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"NavigationLinkList_container__1p0Zu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ControlSection_container__2vAKf\"};","import { CustomNavLink } from \"./CustomNavLink\";\n\nexport default CustomNavLink;\n","import { FC } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport s from \"./CustomNavLink.module.css\";\n\ninterface NavLinkProps {\n  link: string;\n  icon: React.ReactNode;\n  text: string;\n}\n\nexport const CustomNavLink: FC<NavLinkProps> = ({ link, icon, text }) => {\n  return (\n    <Link className={s.nav_link} to={`/${link}`}>\n      {icon}\n      <p className={s.nav_link_text}>{text}</p>\n    </Link>\n  );\n};\n","import { NavigationLinkList } from \"./NavigationLinkList\";\n\nexport default NavigationLinkList;\n","import s from \"./NavigationLinkList.module.css\";\nimport { FaBeer } from \"react-icons/fa\";\nimport CustomNavLink from \"../../CustomNavLink\";\n\nexport const NavigationLinkList = () => {\n  return (\n    <div className={s.container}>\n      <CustomNavLink link=\"test\" icon={<FaBeer />} text=\"TEST\" />\n      <CustomNavLink link=\"home\" icon={<FaBeer />} text=\"HOME\" />\n    </div>\n  );\n};\n","import { ControlSection } from \"./ControlSection\";\n\nexport default ControlSection;\n","import { FC } from \"react\";\nimport NavigationLinkList from \"../NavigationLinkList\";\nimport s from \"./ControlSection.module.css\";\n\nexport const ControlSection: FC = () => {\n  return (\n    <div className={s.container}>\n      <NavigationLinkList />\n    </div>\n  );\n};\n","import { DraggableNavigation } from \"./DraggableNavigation\";\n\nexport default DraggableNavigation;\n","import React from \"react\";\nimport Draggable from \"react-draggable\";\n\ninterface DraggableNavigationProps {\n  children: React.ReactNode;\n  onDragChange: (value: boolean) => any;\n}\n\nexport const DraggableNavigation = (props: DraggableNavigationProps) => {\n  let [activeDrags, setActiveDrags] = React.useState(0);\n  const [horizonalMaxPoint, setHorizonalMaxPoint] = React.useState(0);\n  const OPEN_MENU_WIDTH = -240;\n  const nodeRef = React.useRef(null);\n  const onStart = () => setActiveDrags(++activeDrags);\n  const onStop = () => setActiveDrags(--activeDrags);\n  const dragHandlers = { onStart, onStop };\n  const { onDragChange } = props;\n\n  const handleCloseDraggable = () => {\n    onDragChange(true);\n    return setHorizonalMaxPoint(OPEN_MENU_WIDTH);\n  };\n  const handleOpenDraggable = () => {\n    onDragChange(false);\n    return setHorizonalMaxPoint(0);\n  };\n\n  return (\n    <Draggable\n      nodeRef={nodeRef}\n      defaultPosition={{ x: 0, y: 0 }}\n      axis=\"x\"\n      position={{ x: horizonalMaxPoint, y: 0 }}\n      {...dragHandlers}\n      onStop={(_, data) => {\n        if (data.x < horizonalMaxPoint) {\n          handleCloseDraggable();\n        } else {\n          handleOpenDraggable();\n        }\n      }}\n    >\n      <div className=\"box cursor-x\" ref={nodeRef}>\n        <div\n          className={`box_nav_icon ${\n            horizonalMaxPoint === 0 ? \"\" : \"box_nav_icon_active\"\n          }`}\n        />\n        {props.children}\n      </div>\n    </Draggable>\n  );\n};\n","import { Loader } from \"./Loader\";\n\nexport default Loader;\n","import s from \"./Loader.module.css\";\n\nexport const Loader = () => {\n  return (\n    <div className={s.loaderContainer}>\n      <div className={s.lds_default}>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  );\n};\n","import { ScreenPreLoader } from \"./ScreenPreLoader\";\n\nexport default ScreenPreLoader;\n","import React from \"react\";\nimport Loader from \"../Loader\";\n\ninterface ScreenPreLoader {\n  children: React.ReactNode;\n}\n\nexport const ScreenPreLoader = (props: ScreenPreLoader) => {\n  const [loading, setLoading] = React.useState(true);\n  setInterval(() => setLoading(false), 2000);\n\n  return <>{loading ? <Loader /> : props.children}</>;\n};\n","import { HomeScreen } from \"./HomeScreen\";\n\nexport default HomeScreen;\n","export const HomeScreen = () => {\n  return <p>123</p>;\n};\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport ControlSection from \"./components/Control/ControlSection\";\nimport DraggableNavigation from \"./components/Control/DraggableNavigation\";\nimport ScreenPreLoader from \"./components/ScreenPreLoader\";\nimport HomeScreen from \"./screens/HomeScreen\";\n\nconst Test = () => {\n  return (\n    <div>\n      <p>TEST</p>\n    </div>\n  );\n};\n\nfunction App() {\n  const [menuIsOpen, setMenuIsOpen] = React.useState(false);\n\n  console.log(menuIsOpen, \"menuIsOpen\");\n\n  return (\n    <Router>\n      <div className=\"app\">\n        <div className=\"control\">\n          <DraggableNavigation onDragChange={setMenuIsOpen}>\n            <ControlSection />\n          </DraggableNavigation>\n        </div>\n\n        <div className={`window ${menuIsOpen && \"window_fullWidth\"}`}>\n          <Switch>\n            <Route exact path=\"/home\">\n              <ScreenPreLoader>\n                <HomeScreen />\n              </ScreenPreLoader>\n            </Route>\n            <Route path=\"/test\">\n              <Test />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}